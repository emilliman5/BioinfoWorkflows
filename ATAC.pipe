GENOME="hg19"
FRAG="180"	
THREADS=8	
bin=10

sickle={
	exec """ sickle pe -t illumina -f $input1 -r $input2 -o $output1 -p $output2 -s $output3 """
	
	}			

cutAdapt = {
	transform('cutAdapt'+'.fastq'+'.gz'){
	
		exec """ cutadapt -a CTGTCTCTTATA $input -o $output"""
		}
	}
	
bowtie2 = {
	transform('.fastq.gz') to('bowtie2_N1_' + GENOME + '.sam'){
		exec """bowtie2 GENOME -1 $input1 -2 $input2 -X 2000 -N 1 -p $THREADS --no-unal --dovetail --no-mixed 
		--no-discordant -S $output1"""
		}
	}
	
deDupe = {
	transform("dedupe"+."bam", "metrics"+'.txt'){
		java -Xmx2g -jar ${PATH_TO_PICARD}/MarkDuplicates.jar 
		INPUT=$input.bam
		OUTPUT=$output1
		METRICS_FILE=$output2
		REMOVE_DUPLICATES=true
		ASSUME_SORTED=true
		}
	}
	
FASTQC = {
			exec "~/bin/FastQC/fastqc -t $THREADS $input"
			forward input
	}

samToBam = {
	transform('.bam'){
		exec """ samtools view -bS $inputs.sam | samtools sort - $output.prefix """
		}	
	}

index = {

	exec "samtools index $input"
	forward input
	
}

coverage = {
	transform('.bigWig'){
		exec """bamCoverage -b $input -bs $bin -p 8 -o $output --ignoreDuplicates --normalizeTo1x 2451960000"""
		}
	}
	

intraMateDist = {
		transform('NFR'+'.sam', 'NUC'+'.sam', 'intraMate_Dist'+'.txt'){
			exec """perl ~/scripts/sam_intraPairDist.pl FRAG $input.sam $output1 $output2 $output3"""
			forward input
		}
	}
	
Bpipe.run { "%.fastq" * [cutAdapt] + sickle + bowtie2 + [FASTQC, intraMateDist] + "%.sam" * [samToBam + dedupe + index + coverage] }